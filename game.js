// –ò–≥—Ä–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let player = {
    strength: 10,
    stamina: 10,
    maxStamina: 10,
    money: 100,
    xp: 0,
    level: 1
};

let gameState = {
    training: false,
    currentExercise: null,
    qteActive: false,
    qteCount: 0,
    qteTarget: 0,
    qteTimeLeft: 0,
    qteInterval: null
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
function initGame() {
    updateStats();
    addLog("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∑–∞–ª!");
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateStats() {
    document.getElementById("strength").textContent = player.strength;
    document.getElementById("stamina").textContent = player.stamina;
    document.getElementById("max-stamina").textContent = player.maxStamina;
    document.getElementById("money").textContent = player.money;
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥
function addLog(message) {
    const log = document.getElementById("message-display");
    log.textContent = message;
    log.style.opacity = 1;
    setTimeout(() => log.style.opacity = 0, 3000);
}

// –ù–∞—á–∞–ª–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
function startTraining(type) {
    if (player.stamina <= 0) {
        addLog("‚ùå –°–ª–∏—à–∫–æ–º —É—Å—Ç–∞–ª –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏!");
        return;
    }
    
    gameState.training = true;
    gameState.currentExercise = type;
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll("button").forEach(btn => {
        if (!btn.id.includes("qte")) btn.disabled = true;
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä
    const equipment = document.getElementById(`${type.replace("-", "")}`);
    if (equipment) equipment.style.display = "block";
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º QTE
    let qteTarget = 0;
    let message = "";
    
    switch(type) {
        case "bench":
            qteTarget = 10 + Math.floor(player.strength / 5);
            message = "–ñ–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–¥–Ω—è—Ç—å —à—Ç–∞–Ω–≥—É!";
            setupBenchPress();
            break;
        case "squat":
            qteTarget = 8 + Math.floor(player.strength / 5);
            message = "–ü—Ä–∏—Å–µ–¥–∞–π! –ë—ã—Å—Ç—Ä–æ –Ω–∞–∂–∏–º–∞–π!";
            setupSquat();
            break;
        case "treadmill":
            qteTarget = 15 + Math.floor(player.maxStamina / 5);
            message = "–ë–µ–≥–∏! –ù–∞–∂–∏–º–∞–π –±—ã—Å—Ç—Ä–µ–µ!";
            setupTreadmill();
            break;
    }
    
    startQTE(type, qteTarget, message);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∂–∏–º–∞ –ª–µ–∂–∞
function setupBenchPress() {
    // –ò–≥—Ä–æ–∫ –ª–µ–∂–∏—Ç –Ω–∞ —Å–∫–∞–º—å–µ
    document.getElementById("player").style.bottom = "35px";
    document.getElementById("player-arm-left").style.transform = "rotate(70deg)";
    document.getElementById("player-arm-right").style.transform = "rotate(-70deg)";
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π
function setupSquat() {
    // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –¥–ª—è –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π
    const leftLeg = document.getElementById("player-leg-left");
    const rightLeg = document.getElementById("player-leg-right");
    
    if (leftLeg && rightLeg) {
        leftLeg.style.transform = "rotate(15deg)";
        rightLeg.style.transform = "rotate(-15deg)";
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–≥–æ–≤–æ–π –¥–æ—Ä–æ–∂–∫–∏
function setupTreadmill() {
    // –ù–æ–≥–∏ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏
    const leftLeg = document.getElementById("player-leg-left");
    const rightLeg = document.getElementById("player-leg-right");
    
    if (leftLeg && rightLeg) {
        leftLeg.style.transform = "none";
        rightLeg.style.transform = "none";
        leftLeg.style.animation = "none";
        rightLeg.style.animation = "none";
    }
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π
function animateSquat() {
    const player = document.getElementById("player");
    if (player) {
        player.style.animation = "squat 0.5s";
        setTimeout(() => player.style.animation = "none", 500);
    }
}

// –ê–Ω–∏–º–∞—Ü–∏—è –±–µ–≥–∞
function animateRun() {
    const leftLeg = document.getElementById("player-leg-left");
    const rightLeg = document.getElementById("player-leg-right");
    
    if (leftLeg && rightLeg) {
        // –ë—ã—Å—Ç—Ä–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —à–∞–≥–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏
        leftLeg.style.transform = "rotate(15deg)";
        rightLeg.style.transform = "rotate(-15deg)";
        
        setTimeout(() => {
            leftLeg.style.transform = "rotate(-15deg)";
            rightLeg.style.transform = "rotate(15deg)";
        }, 100);
    }
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
function completeTraining(type, successRate) {
    let strengthGain = 0;
    let staminaGain = 0;
    
    switch(type) {
        case "bench":
        case "squat":
            strengthGain = Math.floor(2 * successRate);
            player.strength += strengthGain;
            addLog(`üí™ +${strengthGain} –∫ —Å–∏–ª–µ!`);
            break;
        case "treadmill":
            staminaGain = Math.floor(3 * successRate);
            player.stamina = Math.min(player.stamina + staminaGain, player.maxStamina);
            addLog(`üèÉ +${staminaGain} –∫ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏!`);
            break;
    }
    
    // –†–∞—Å—Ö–æ–¥ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏
    player.stamina = Math.max(0, player.stamina - 1);
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Ç—Ä–µ–Ω–∞–∂–µ—Ä
    document.querySelectorAll(".equipment").forEach(el => el.style.display = "none");
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–≥—Ä–æ–∫–∞ –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
    resetPlayer();
    
    gameState.training = false;
    updateStats();
    
    // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll("button").forEach(btn => {
        if (!btn.id.includes("qte")) btn.disabled = false;
    });
}

// –°–±—Ä–æ—Å –ø–æ–∑–∏—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞
function resetPlayer() {
    const player = document.getElementById("player");
    if (player) {
        player.style.bottom = "20px";
        player.style.animation = "none";
    }
    
    const leftArm = document.getElementById("player-arm-left");
    const rightArm = document.getElementById("player-arm-right");
    const leftLeg = document.getElementById("player-leg-left");
    const rightLeg = document.getElementById("player-leg-right");
    
    if (leftArm) leftArm.style.transform = "none";
    if (rightArm) rightArm.style.transform = "none";
    if (leftLeg) {
        leftLeg.style.transform = "none";
        leftLeg.style.animation = "none";
    }
    if (rightLeg) {
        rightLeg.style.transform = "none";
        rightLeg.style.animation = "none";
    }
}

// –û—Ç–¥—ã—Ö
function rest() {
    const recovery = 3 + Math.floor(player.maxStamina / 5);
    player.stamina = Math.min(player.stamina + recovery, player.maxStamina);
    addLog(`üí§ –û—Ç–¥–æ—Ö–Ω—É–ª! +${recovery} –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.`);
    updateStats();
}

// QTE –º–∏–Ω–∏-–∏–≥—Ä–∞
function startQTE(type, target, message) {
    gameState.qteActive = true;
    gameState.qteCount = 0;
    gameState.qteTarget = target;
    gameState.qteTimeLeft = 100;
    
    document.getElementById("qte-message").textContent = message;
    document.getElementById("qte-container").style.display = "flex";
    
    document.getElementById("qte-button").onclick = () => {
        if (gameState.qteActive) {
            gameState.qteCount++;
            
            // –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
            switch(gameState.currentExercise) {
                case "bench":
                    const bar = document.getElementById("bench-press-bar");
                    bar.style.animation = "benchPress 0.3s";
                    setTimeout(() => bar.style.animation = "none", 300);
                    break;
                case "squat":
                    animateSquat();
                    break;
                case "treadmill":
                    animateRun();
                    break;
            }
        }
    };
    
    // –¢–∞–π–º–µ—Ä QTE
    gameState.qteInterval = setInterval(() => {
        gameState.qteTimeLeft -= 1;
        document.getElementById("qte-progress").style.width = `${gameState.qteTimeLeft}%`;
        
        if (gameState.qteTimeLeft <= 0) {
            endQTE(type);
        }
    }, 100);
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ QTE
function endQTE(type) {
    clearInterval(gameState.qteInterval);
    gameState.qteActive = false;
    document.getElementById("qte-container").style.display = "none";
    
    const successRate = Math.min(1, gameState.qteCount / gameState.qteTarget);
    completeTraining(type, successRate);
}

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
window.onload = function() {
    initGame();
    
    // –ü—Ä–∏–≤—è–∑–∫–∞ –∫–Ω–æ–ø–æ–∫
    document.getElementById("bench-btn").addEventListener("click", () => startTraining("bench"));
    document.getElementById("squat-btn").addEventListener("click", () => startTraining("squat"));
    document.getElementById("treadmill-btn").addEventListener("click", () => startTraining("treadmill"));
    document.getElementById("rest-btn").addEventListener("click", rest);
};
